package com.exjobb.backend.dto;

import lombok.Data;
import lombok.NoArgsConstructor;
import lombok.AllArgsConstructor;
import lombok.Builder;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Map;

/**
 * DTO for content generation responses to the frontend.
 *
 * This class defines the structure of successful responses when content
 * has been generated. It includes the generated content plus metadata
 * about the generation process.
 */
@Data
@NoArgsConstructor
@AllArgsConstructor
@Builder
public class ContentGenerationResponse {

    /**
     * Unique identifier for the task that generated this content.
     * Can be used to track or reference this generation later.
     */
    private String taskId;

    /**
     * The generated content as a string.
     * This is the main output from the Content Agent.
     */
    private String content;

    /**
     * Type of content that was generated.
     * Echoes back the requested content type for confirmation.
     */
    private String contentType;

    /**
     * Platform the content was optimized for.
     * May be different from requested if auto-optimization occurred.
     */
    private String platform;

    /**
     * Brand voice used in the generation.
     * Confirms the tone that was applied to the content.
     */
    private String brandVoice;

    /**
     * Target audience the content was tailored for.
     * Helps users understand the intended demographic.
     */
    private String targetAudience;

    /**
     * Time taken to generate the content (in seconds).
     * Useful for performance monitoring and user expectations.
     */
    private Double generationTimeSeconds;

    /**
     * Information about the workflow steps that were executed.
     * Shows whether optimization was performed, evaluation score, etc.
     */
    private WorkflowInfo workflowInfo;

    /**
     * Suggestions for improving or modifying the content.
     * Generated by the evaluator component of the workflow.
     */
    private List<String> suggestions;

    /**
     * Estimated performance metrics for the content.
     * Predictive analytics about how the content might perform.
     */
    private Map<String, Object> estimatedMetrics;

    /**
     * Alternative versions or variations of the content.
     * May include different phrasings or approaches.
     */
    private List<String> alternatives;

    /**
     * Timestamp when the content was generated.
     * Provides context for when this content was created.
     */
    private LocalDateTime generatedAt;

    /**
     * Whether the user can provide feedback on this content.
     * Indicates if the feedback system is available for this generation.
     */
    private Boolean feedbackEnabled;

    /**
     * Nested class for workflow information.
     * Contains details about the evaluator-optimizer process.
     */
    @Data
    @NoArgsConstructor
    @AllArgsConstructor
    @Builder
    public static class WorkflowInfo {

        /**
         * Whether initial content generation was successful.
         */
        private Boolean initialGenerationCompleted;

        /**
         * Whether content evaluation was performed.
         */
        private Boolean evaluationPerformed;

        /**
         * Score from the content evaluator (1-10 scale).
         */
        private Double evaluationScore;

        /**
         * Whether content optimization was performed.
         */
        private Boolean optimizationPerformed;

        /**
         * Number of optimization iterations completed.
         */
        private Integer optimizationIterations;

        /**
         * Name/version of the LLM model used.
         */
        private String modelUsed;

        /**
         * Any warnings or notes from the generation process.
         */
        private List<String> warnings;
    }
}